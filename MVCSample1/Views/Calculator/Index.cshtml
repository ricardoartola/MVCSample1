@using MVCSample1.Models
@model MVCSample1.Models.Calculator
<h2>Calculator</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Operand1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operand1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Operand1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operand2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Operand2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Operand2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Operator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Operator",
                EnumHelper.GetSelectList(typeof(Operator)),
                    "Select an operator",
                    new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Operator, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Calculate" class="btn btn-default" />
            </div>
        </div>
        @if(Model!=null && Model.Result.HasValue)
        {
            <div>The result of the operation is : @Model.Result.Value</div>
        }
        
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

